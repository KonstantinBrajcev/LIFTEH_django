name: Django CD
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify settings_prod.py exists
        working-directory: ./LIFTEH_project/LIFTEH_project
        run: |
          if [ ! -f "settings_prod.py" ]; then
            exit 1
          fi

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Install dependencies
        working-directory: ./LIFTEH_project
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-server.txt

      - name: Copy project to server (исключая db.sqlite3)
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "LIFTEH_project/"
          target: "${{ secrets.PROJECT_PATH }}"
          rm: true
          overwrite: true

      - name: Prepare server (migrations + static)
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}/LIFTEH_project
            source ~/myenv/bin/activate
            export DJANGO_SETTINGS_MODULE=LIFTEH_project.settings_prod

            # Создаем пустую БД если её нет
            if [ ! -f "db.sqlite3" ]; then
              python manage.py makemigrations
              python manage.py migrate --no-input
              echo "Создана новая база данных"
            else
              # Только применяем миграции к существующей БД
              python manage.py makemigrations
              python manage.py migrate --no-input
              echo "Миграции применены к существующей БД"
            fi

            # Сбор статики
            python manage.py collectstatic --no-input

      - name: Restart Gunicorn
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            source ~/myenv/bin/activate
            cd ~/www/jelezo.by/LIFTEH_project || exit 1
            export DJANGO_SETTINGS_MODULE=LIFTEH_project.settings_prod
            PIDS=$(pgrep -f gunicorn)
            MY_PID=$$
            MY_PPID=$(ps -o ppid= -p $$ | tr -d ' ')
            if [ -n "$PIDS" ]; then
              for pid in $PIDS; do
                if [ "$pid" = "$MY_PID" ] || [ "$pid" = "$MY_PPID" ]; then
                  continue
                fi
                kill "$pid" 2>/dev/null || echo "Процесс $pid уже завершён"
              done
            else
            fi
            nohup gunicorn --bind 0.0.0.0:8001 --workers 3 --timeout 120 LIFTEH_project.wsgi:application > gunicorn.log 2>&1 &
            sleep 3
            pgrep -af gunicorn || echo "Gunicorn не запустился"
