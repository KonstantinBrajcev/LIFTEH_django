name: Django CD
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify settings.py exists
        working-directory: ./LIFTEH_project/LIFTEH_project
        run: |
          if [ ! -f "settings.py" ]; then
            echo "::error::settings.py not found in repository!"
            exit 1
          fi
          echo "settings.py found and valid"

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Install dependencies
        working-directory: ./LIFTEH_project
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-server.txt

      - name: Copy project to server (без перезаписи БД)
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "LIFTEH_project/"
          target: "${{ secrets.PROJECT_PATH }}"
          rm: false # ⚠️ Важно: НЕ удалять существующие файлы
          overwrite: true

      - name: Prepare server (migrations + static)
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}/LIFTEH_project
            source ~/myenv/bin/activate
            export DJANGO_PRODUCTION=true
            export DJANGO_SETTINGS_MODULE=LIFTEH_project.settings

            # Обновляем зависимости
            pip install -r requirements-server.txt

            # ⚠️ Удаляем db.sqlite3 если он пришел из репозитория
            if [ -f "db.sqlite3" ]; then
              # Проверяем размер файла - если маленький, значит это пустая БД из разработки
              FILE_SIZE=$(stat -f%z "db.sqlite3" 2>/dev/null || stat -c%s "db.sqlite3" 2>/dev/null)
              if [ "$FILE_SIZE" -lt 50000 ]; then  # Если файл меньше 50KB - это пустая БД
                echo "Удаляем пустую БД из разработки..."
                rm -f db.sqlite3
              else
                echo "Сохраняем существующую БД на сервере (размер: $FILE_SIZE байт)"
              fi
            fi

            # Если БД нет - создаем через миграции
            if [ ! -f "db.sqlite3" ]; then
              python manage.py makemigrations
              python manage.py migrate --no-input
            else
              python manage.py makemigrations
              python manage.py migrate --no-input
            fi

            # Сбор статики с проверкой
            echo "Собираем статические файлы..."
            python manage.py collectstatic --no-input --clear -v 3

            # Проверяем собранные статические файлы
            if [ -d "staticfiles" ]; then
              echo "Статические файлы собраны в:"
              ls -la staticfiles/
              du -sh staticfiles/
            else
              echo "ОШИБКА: Папка staticfiles не создана!"
            fi

      - name: Restart Gunicorn
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            source ~/myenv/bin/activate
            cd ${{ secrets.PROJECT_PATH }}/LIFTEH_project || exit 1
            export DJANGO_PRODUCTION=true
            export DJANGO_SETTINGS_MODULE=LIFTEH_project.settings
            PIDS=$(pgrep -f gunicorn)
            MY_PID=$$
            MY_PPID=$(ps -o ppid= -p $$ | tr -d ' ')
            if [ -n "$PIDS" ]; then
              for pid in $PIDS; do
                if [ "$pid" = "$MY_PID" ] || [ "$pid" = "$MY_PPID" ]; then
                  continue
                fi
                kill "$pid" 2>/dev/null || echo "Процесс $pid уже завершён"
              done
            fi
            nohup gunicorn --bind 0.0.0.0:8001 --workers 3 --timeout 120 LIFTEH_project.wsgi:application > gunicorn.log 2>&1 &
            sleep 3
            pgrep -af gunicorn || echo "Gunicorn не запустился"
      - name: Verify static files
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}/LIFTEH_project
            echo "Проверка статических файлов:"
            find staticfiles/ -type f -name "*.css" -o -name "*.js" | head -10
            echo "Размер папки staticfiles:"
            du -sh staticfiles/
