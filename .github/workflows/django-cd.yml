name: Django CD
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify settings_prod.py exists
        working-directory: ./LIFTEH_project/LIFTEH_project
        run: |
          if [ ! -f "settings_prod.py" ]; then
            echo "::error::settings_prod.py not found in repository!"
            exit 1
          fi
          echo "settings_prod.py found and valid"

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install dependencies
        working-directory: ./LIFTEH_project
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-server.txt

      - name: Copy project to server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "LIFTEH_project/"
          target: "${{ secrets.PROJECT_PATH }}"
          rm: true
          overwrite: true

      - name: Prepare server (migrations + static)
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Начинаем подготовку сервера"
            cd ${{ secrets.PROJECT_PATH }}/LIFTEH_project
            source ~/myenv/bin/activate
            export DJANGO_SETTINGS_MODULE=LIFTEH_project.settings_prod
            echo "Активирована виртуальная среда"
                
            echo "Установка зависимостей"
            pip install -r requirements-server.txt
  
            echo "Применение миграций"
            python manage.py makemigrations
            python manage.py migrate --no-input
  
            echo "Сбор статических файлов"
            # python manage.py collectstatic --no-input --clear
        timeout-minutes: 20
  
      - name: Restart Gunicorn
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set +e  # отключаем прерывание по ошибке
            source ~/myenv/bin/activate
            echo "Виртуальная среда активирована"

            cd ~/www/jelezo.by/LIFTEH_project || exit 1
            echo "Зашли в папку"

            export DJANGO_SETTINGS_MODULE=LIFTEH_project.settings_prod
            echo "Экспортировали настройки"

            pkill -f gunicorn || true
            echo "Попытались остановить Gunicorn (мягко)"

            # pkill -9 -f gunicorn
            # echo "Попытались остановить Gunicorn (жестко)"

            # sleep 5

            # if pgrep -f gunicorn; then
            #   echo "Процессы не завершились, отправляем SIGKILL"
            #   pkill -9 -f gunicorn
            #   sleep 3
            # fi

            echo "Запускаем Gunicorn в фоне через nohup"
            nohup gunicorn --bind 0.0.0.0:8001 --workers 3 LIFTEH_project.wsgi:application > gunicorn.log 2>&1 &
            sleep 3

            echo "Проверка запущенных процессов:"
            pgrep -af gunicorn || echo "Gunicorn не запустился"

            echo "Деплой завершён"
            exit 0

      # - name: Restart Gunicorn
      #   uses: appleboy/ssh-action@v1
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USERNAME }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       source ~/myenv/bin/activate
      #       echo "Виртуальная среда активирована"

      #       cd ~/www/jelezo.by/LIFTEH_project
      #       echo "Зашли в папку:  cd ~/www/jelezo.by/LIFTEH_project"

      #       export DJANGO_SETTINGS_MODULE=LIFTEH_project.settings_prod
      #       echo "Экспортировали настройки"

      #       pkill -f gunicorn && sleep 5 || echo "Процесс Gunicorn не найден"
      #       echo "Пытались остановить процесс Gunicorn"

      #       pkill -9 -f gunicorn && sleep 3 || echo "Нет процессов для принудительного завершения"
      #       echo "Остановили процессы Gunicorn принудительно"
      #       sleep 10

      #       # Проверка, что процессы завершились
      #       if pgrep -f gunicorn; then
      #         echo "Процессы не завершились, отправляем SIGKILL"
      #         pkill -9 -f gunicorn
      #         sleep 5
      #       fi

      #       # Запуск Gunicorn
      #       gunicorn --bind 0.0.0.0:8001 --workers 3 LIFTEH_project.wsgi:application
      #       echo "Запустили Gunicorn"

      #       echo "Проверка запущенных процессов:"
      #       pgrep -af gunicorn || echo "Gunicorn не запустился"
      #   timeout-minutes: 20
