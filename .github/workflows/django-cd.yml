# name: Django CD

# on:
#   push:
#     branches: [main]

# jobs:
#   deploy:
#     runs-on: ubuntu-24.04
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Verify settings_prod.py exists
#         working-directory: ./LIFTEH_project/LIFTEH_project
#         run: |
#           if [ ! -f "settings_prod.py" ]; then
#             echo "::error::settings_prod.py not found in repository!"
#             exit 1
#           fi
#           echo "settings_prod.py found and valid"

#       - name: Set up Python 3.9
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.9'

#       - name: Install dependencies
#         working-directory: ./LIFTEH_project
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements-server.txt

#       - name: Copy project to server
#         uses: appleboy/scp-action@v1
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           username: ${{ secrets.SSH_USERNAME }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           source: "LIFTEH_project/"
#           target: "${{ secrets.PROJECT_PATH }}"
#           rm: true
#           overwrite: true

#       - name: Prepare server (migrations + static)
#         uses: appleboy/ssh-action@v1
#         with:
#             host: ${{ secrets.SSH_HOST }}
#             username: ${{ secrets.SSH_USERNAME }}
#             key: ${{ secrets.SSH_PRIVATE_KEY }}
#             script: |
#               cd ${{ secrets.PROJECT_PATH }}
#               source ~/myenv/bin/activate
#               pip install -r LIFTEH_project/requirements-server.txt
#               cd LIFTEH_project
#               python manage.py makemigrations
#               python manage.py migrate --no-input
#               python manage.py collectstatic --no-input --clear
        
#       - name: Restart Gunicorn
#         uses: appleboy/ssh-action@v1
#         with:
#             host: ${{ secrets.SSH_HOST }}
#             username: ${{ secrets.SSH_USERNAME }}
#             key: ${{ secrets.SSH_PRIVATE_KEY }}
#             script: |
#               cd ${{ secrets.PROJECT_PATH }}
#               source ~/myenv/bin/activate
#               pkill -f gunicorn || echo "No Gunicorn processes found"
#               sleep 5
#               gunicorn \
#                 --bind 0.0.0.0:8001 \
#                 --workers 3 \
#                 --timeout 120 \
#                 --access-logfile ${{ secrets.PROJECT_PATH }}/gunicorn_access.log \
#                 --error-logfile ${{ secrets.PROJECT_PATH }}/gunicorn_error.log \
#                 --pythonpath ${{ secrets.PROJECT_PATH }}/LIFTEH_project \
#                 --daemon \
#                 LIFTEH_project.wsgi:application

name: Django CD
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify settings_prod.py exists
        working-directory: ./LIFTEH_project/LIFTEH_project
        run: |
          if [ ! -f "settings_prod.py" ]; then
            echo "::error::settings_prod.py not found in repository!"
            exit 1
          fi
          echo "settings_prod.py found and valid"

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        working-directory: ./LIFTEH_project
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-server.txt

      - name: Copy project to server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "LIFTEH_project/"
          target: "${{ secrets.PROJECT_PATH }}"
          rm: true
          overwrite: true

      - name: Prepare server (migrations + static)
        uses: appleboy/ssh-action@v1
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            script: |
              cd ${{ secrets.PROJECT_PATH }}/LIFTEH_project
              source ~/myenv/bin/activate
              export DJANGO_SETTINGS_MODULE=LIFTEH_project.settings_prod
              pip install -r requirements-server.txt
              python manage.py makemigrations --no-input
              python manage.py migrate --no-input
              python manage.py collectstatic --no-input --no-clear --ignore=staticfiles_ignore.txt
        
      - name: Restart Gunicorn
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            source ~/myenv/bin/activate
            echo "Виртуальная среда активирована"
            sleep 10
            cd ~/www/jelezo.by/LIFTEH_project/
            echo "Зашли в папку:  cd ~/www/jelezo.by/LIFTEH_project/"
            sleep 10

            #export DJANGO_SETTINGS_MODULE=LIFTEH_project.settings_prod
            #echo "Экспортировали настройки"

            # Остановка предыдущего процесса
            #pkill -f gunicorn || echo "Процесс Gunicorn не найден"
            # Пытаемся корректно завершить процессы
            timeout 10 pkill -f gunicorn && sleep 5 || echo "Процесс Gunicorn не найден"
            echo "Пытались остановить процесс Gunicorn"

            # Принудительно завершаем оставшиеся процессы
            timeout 5 pkill -9 -f gunicorn && sleep 3 || echo "Нет процессов для принудительного завершения"
            echo "Остановили процессы Gunicorn принудительно"
            sleep 10

            # Проверка, что процессы завершились
            if pgrep -f gunicorn; then
              echo "Процессы не завершились, отправляем SIGKILL"
              pkill -9 -f gunicorn
              sleep 5
            fi

            # Запуск Gunicorn
            gunicorn --bind 0.0.0.0:8001 --workers 3 LIFTEH_project.wsgi:application
            echo "Запустили Gunicorn"

            echo "Проверка запущенных процессов:"
            pgrep -af gunicorn || echo "Gunicorn не запустился"
