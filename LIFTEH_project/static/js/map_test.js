// –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ö–û–ú–ê–ù–î–´ –î–õ–Ø –û–¢–õ–ê–î–ö–ò
window.debugMap = {
  checkVisibility: function () {
    console.log('=== –û–¢–õ–ê–î–ö–ê –ö–ê–†–¢–´ ===');
    console.log('üè† buildingPlacemarks:', buildingPlacemarks.length);
    console.log('üöó carPlacemarks:', carPlacemarks.length);

    if (clusterer && typeof clusterer.getGeoObjects === 'function') {
      const geoObjects = clusterer.getGeoObjects();
      console.log('üìç –ú–µ—Ç–æ–∫ –≤ –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ç–æ—Ä–µ:', geoObjects.length);

      // –ü–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤—ã–µ 5 –º–µ—Ç–æ–∫
      geoObjects.slice(0, 5).forEach((obj, i) => {
        try {
          const coords = obj.geometry.getCoordinates();
          console.log(`–ú–µ—Ç–∫–∞ ${i}:`, coords);
        } catch (error) {
          console.log(`–ú–µ—Ç–∫–∞ ${i}: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç`);
        }
      });
    } else {
      console.log('‚ùå –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ç–æ—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
    }

    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ü–µ–Ω—Ç—Ä –∏ –∑—É–º –∫–∞—Ä—Ç—ã
    console.log('üéØ –¶–µ–Ω—Ç—Ä –∫–∞—Ä—Ç—ã:', map.getCenter());
    console.log('üîç –ó—É–º –∫–∞—Ä—Ç—ã:', map.getZoom());
  },

  showAllObjects: function () {
    console.log('=== –í–°–ï –û–ë–™–ï–ö–¢–´ ===');
    buildingPlacemarks.forEach((pm, i) => {
      try {
        const coords = pm.geometry.getCoordinates();
        console.log(`–û–±—ä–µ–∫—Ç ${i}: ${coords[0]}, ${coords[1]}`);
      } catch (error) {
        console.log(`–û–±—ä–µ–∫—Ç ${i}: –û—à–∏–±–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç`);
      }
    });
  },

  // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ—Ç–æ–∫
  checkMapObjects: function () {
    console.log('=== –ü–†–û–í–ï–†–ö–ê –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ú–ï–¢–û–ö ===');
    if (clusterer && typeof clusterer.getGeoObjects === 'function') {
      const objects = clusterer.getGeoObjects();
      console.log('–í–∏–¥–∏–º—ã—Ö –º–µ—Ç–æ–∫ –Ω–∞ –∫–∞—Ä—Ç–µ:', objects.length);

      objects.forEach((obj, i) => {
        const coords = obj.geometry.getCoordinates();
        const pixelCoords = map.getPixelCoordinates(coords);
        console.log(`–ú–µ—Ç–∫–∞ ${i}: coords=${coords}, pixel=${pixelCoords}`);
      });
    }
  }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
setTimeout(() => {
  console.log('=== –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ß–ï–†–ï–ó 3 –°–ï–ö–£–ù–î–´ ===');
  if (window.debugMap && typeof window.debugMap.checkVisibility === 'function') {
    window.debugMap.checkVisibility();
  } else {
    console.log('‚ùå debugMap –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
  }
}, 3000);